Terminals unused in grammar

   BREAK
   CASE
   CLASS
   CONTINUE
   DO
   EXIT
   NUL
   REPEAT
   TYPE
   _CHAR
   '!'


Rules useless in parser due to conflicts

   70 $@4: %empty


State 103 conflicts: 2 reduce/reduce
State 117 conflicts: 1 shift/reduce
State 152 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: OBJECT ID '{' declaration_list method_list '}'
    2        | OBJECT ID '{' method_list '}'

    3 var_type: INT
    4         | CHAR
    5         | STRING
    6         | BOOLEAN
    7         | FLOAT

    8 declaration: value
    9            | variable

   10 value: VAL ID '=' expression
   11      | VAL ID ':' var_type '=' expression

   12 variable: VAR ID
   13         | VAR ID ':' var_type
   14         | VAR ID '=' expression
   15         | VAR ID ':' var_type '=' expression
   16         | VAR ID ':' var_type '[' int_expreesion ']'

   17 constant_exp: STR
   18             | NUM
   19             | DOUBLE
   20             | TRUE
   21             | FALSE
   22             | ID '[' int_expreesion ']'

   23 declaration_list: declaration
   24                 | declaration_list declaration

   25 method_list: method
   26            | method_list method

   27 $@1: %empty

   28 method: DEF ID $@1 '(' formal_argument_list ')' method_type compound_statement

   29 method_type: ':' var_type
   30            | %empty

   31 formal_argument_list: formal_argument ',' formal_argument_list
   32                     | formal_argument

   33 formal_argument: ID ':' var_type
   34                | %empty

   35 statement: simple
   36          | compound_statement
   37          | selection_statement
   38          | iteration_statement

   39 simple: ID '=' expression
   40       | ID '[' int_expreesion ']' '=' expression
   41       | PRINT expression
   42       | PRINTLN expression
   43       | READ ID
   44       | RETURN expression
   45       | RETURN

   46 expression: int_expreesion
   47           | bool_expression
   48           | '(' expression ')'
   49           | constant_exp
   50           | ID
   51           | procedure_statement

   52 int_expreesion: expression '+' expression
   53               | expression '-' expression
   54               | expression '*' expression
   55               | expression '/' expression
   56               | '-' expression

   57 bool_expression: expression '<' expression
   58                | expression '>' expression
   59                | expression LE_OP expression
   60                | expression EQ_OP expression
   61                | expression GE_OP expression
   62                | expression NE_OP expression
   63                | expression OR_OP expression
   64                | expression AND_OP expression

   65 $@2: %empty

   66 compound_statement: '{' $@2 declaration_list statement_list '}'

   67 $@3: %empty

   68 compound_statement: '{' $@3 statement_list '}'
   69                   | '{' '}'

   70 $@4: %empty

   71 compound_statement: '{' $@4 declaration_list '}'

   72 statement_list: statement
   73               | statement_list statement

   74 selection_statement: IF '(' expression ')' statement ELSE statement
   75                    | IF '(' expression ')' statement

   76 iteration_statement: WHILE '(' expression ')' statement

   77 $@5: %empty

   78 iteration_statement: FOR '(' ID '<' '-' NUM TO NUM ')' $@5 statement

   79 $@6: %empty

   80 procedure_statement: ID '(' $@6 comma_separated_exp ')'

   81 comma_separated_exp: expression ',' comma_separated_exp
   82                    | expression
   83                    | %empty


Terminals, with rules where they appear

$end (0) 0
'!' (33)
'(' (40) 28 48 74 75 76 78 80
')' (41) 28 48 74 75 76 78 80
'*' (42) 54
'+' (43) 52
',' (44) 31 81
'-' (45) 53 56 78
'/' (47) 55
':' (58) 11 13 15 16 29 33
'<' (60) 57 78
'=' (61) 10 11 14 15 39 40
'>' (62) 58
'[' (91) 16 22 40
']' (93) 16 22 40
'{' (123) 1 2 66 68 69 71
'}' (125) 1 2 66 68 69 71
error (256)
BOOLEAN (258) 6
BREAK (259)
CHAR (260) 4
CASE (261)
CLASS (262)
CONTINUE (263)
DEF (264) 28
DO (265)
ELSE (266) 74
EXIT (267)
FLOAT (268) 7
FOR (269) 78
IF (270) 74 75
INT (271) 3
NUL (272)
OBJECT (273) 1 2
PRINT (274) 41
PRINTLN (275) 42
REPEAT (276)
RETURN (277) 44 45
READ (278) 43
STRING (279) 5
TO (280) 78
TYPE (281)
VAL (282) 10 11
VAR (283) 12 13 14 15 16
WHILE (284) 76
LE_OP (285) 59
GE_OP (286) 61
EQ_OP (287) 60
NE_OP (288) 62
AND_OP (289) 64
OR_OP (290) 63
ID (291) 1 2 10 11 12 13 14 15 16 22 28 33 39 40 43 50 78 80
STR (292) 17
NUM (293) 18 78
DOUBLE (294) 19
_CHAR (295)
FALSE (296) 21
TRUE (297) 20
UMINUS (298)


Nonterminals, with rules where they appear

$accept (60)
    on left: 0
program (61)
    on left: 1 2, on right: 0
var_type (62)
    on left: 3 4 5 6 7, on right: 11 13 15 16 29 33
declaration (63)
    on left: 8 9, on right: 23 24
value (64)
    on left: 10 11, on right: 8
variable (65)
    on left: 12 13 14 15 16, on right: 9
constant_exp (66)
    on left: 17 18 19 20 21 22, on right: 49
declaration_list (67)
    on left: 23 24, on right: 1 24 66 71
method_list (68)
    on left: 25 26, on right: 1 2 26
method (69)
    on left: 28, on right: 25 26
$@1 (70)
    on left: 27, on right: 28
method_type (71)
    on left: 29 30, on right: 28
formal_argument_list (72)
    on left: 31 32, on right: 28 31
formal_argument (73)
    on left: 33 34, on right: 31 32
statement (74)
    on left: 35 36 37 38, on right: 72 73 74 75 76 78
simple (75)
    on left: 39 40 41 42 43 44 45, on right: 35
expression (76)
    on left: 46 47 48 49 50 51, on right: 10 11 14 15 39 40 41 42 44
    48 52 53 54 55 56 57 58 59 60 61 62 63 64 74 75 76 81 82
int_expreesion (77)
    on left: 52 53 54 55 56, on right: 16 22 40 46
bool_expression (78)
    on left: 57 58 59 60 61 62 63 64, on right: 47
compound_statement (79)
    on left: 66 68 69 71, on right: 28 36
$@2 (80)
    on left: 65, on right: 66
$@3 (81)
    on left: 67, on right: 68
$@4 (82)
    on left: 70, on right: 71
statement_list (83)
    on left: 72 73, on right: 66 68 73
selection_statement (84)
    on left: 74 75, on right: 37
iteration_statement (85)
    on left: 76 78, on right: 38
$@5 (86)
    on left: 77, on right: 78
procedure_statement (87)
    on left: 80, on right: 51
$@6 (88)
    on left: 79, on right: 80
comma_separated_exp (89)
    on left: 81 82 83, on right: 80 81


State 0

    0 $accept: . program $end

    OBJECT  shift, and go to state 1

    program  go to state 2


State 1

    1 program: OBJECT . ID '{' declaration_list method_list '}'
    2        | OBJECT . ID '{' method_list '}'

    ID  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: OBJECT ID . '{' declaration_list method_list '}'
    2        | OBJECT ID . '{' method_list '}'

    '{'  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: OBJECT ID '{' . declaration_list method_list '}'
    2        | OBJECT ID '{' . method_list '}'

    DEF  shift, and go to state 6
    VAL  shift, and go to state 7
    VAR  shift, and go to state 8

    declaration       go to state 9
    value             go to state 10
    variable          go to state 11
    declaration_list  go to state 12
    method_list       go to state 13
    method            go to state 14


State 6

   28 method: DEF . ID $@1 '(' formal_argument_list ')' method_type compound_statement

    ID  shift, and go to state 15


State 7

   10 value: VAL . ID '=' expression
   11      | VAL . ID ':' var_type '=' expression

    ID  shift, and go to state 16


State 8

   12 variable: VAR . ID
   13         | VAR . ID ':' var_type
   14         | VAR . ID '=' expression
   15         | VAR . ID ':' var_type '=' expression
   16         | VAR . ID ':' var_type '[' int_expreesion ']'

    ID  shift, and go to state 17


State 9

   23 declaration_list: declaration .

    $default  reduce using rule 23 (declaration_list)


State 10

    8 declaration: value .

    $default  reduce using rule 8 (declaration)


State 11

    9 declaration: variable .

    $default  reduce using rule 9 (declaration)


State 12

    1 program: OBJECT ID '{' declaration_list . method_list '}'
   24 declaration_list: declaration_list . declaration

    DEF  shift, and go to state 6
    VAL  shift, and go to state 7
    VAR  shift, and go to state 8

    declaration  go to state 18
    value        go to state 10
    variable     go to state 11
    method_list  go to state 19
    method       go to state 14


State 13

    2 program: OBJECT ID '{' method_list . '}'
   26 method_list: method_list . method

    DEF  shift, and go to state 6
    '}'  shift, and go to state 20

    method  go to state 21


State 14

   25 method_list: method .

    $default  reduce using rule 25 (method_list)


State 15

   28 method: DEF ID . $@1 '(' formal_argument_list ')' method_type compound_statement

    $default  reduce using rule 27 ($@1)

    $@1  go to state 22


State 16

   10 value: VAL ID . '=' expression
   11      | VAL ID . ':' var_type '=' expression

    '='  shift, and go to state 23
    ':'  shift, and go to state 24


State 17

   12 variable: VAR ID .
   13         | VAR ID . ':' var_type
   14         | VAR ID . '=' expression
   15         | VAR ID . ':' var_type '=' expression
   16         | VAR ID . ':' var_type '[' int_expreesion ']'

    '='  shift, and go to state 25
    ':'  shift, and go to state 26

    $default  reduce using rule 12 (variable)


State 18

   24 declaration_list: declaration_list declaration .

    $default  reduce using rule 24 (declaration_list)


State 19

    1 program: OBJECT ID '{' declaration_list method_list . '}'
   26 method_list: method_list . method

    DEF  shift, and go to state 6
    '}'  shift, and go to state 27

    method  go to state 21


State 20

    2 program: OBJECT ID '{' method_list '}' .

    $default  reduce using rule 2 (program)


State 21

   26 method_list: method_list method .

    $default  reduce using rule 26 (method_list)


State 22

   28 method: DEF ID $@1 . '(' formal_argument_list ')' method_type compound_statement

    '('  shift, and go to state 28


State 23

   10 value: VAL ID '=' . expression

    ID      shift, and go to state 29
    STR     shift, and go to state 30
    NUM     shift, and go to state 31
    DOUBLE  shift, and go to state 32
    FALSE   shift, and go to state 33
    TRUE    shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    constant_exp         go to state 37
    expression           go to state 38
    int_expreesion       go to state 39
    bool_expression      go to state 40
    procedure_statement  go to state 41


State 24

   11 value: VAL ID ':' . var_type '=' expression

    BOOLEAN  shift, and go to state 42
    CHAR     shift, and go to state 43
    FLOAT    shift, and go to state 44
    INT      shift, and go to state 45
    STRING   shift, and go to state 46

    var_type  go to state 47


State 25

   14 variable: VAR ID '=' . expression

    ID      shift, and go to state 29
    STR     shift, and go to state 30
    NUM     shift, and go to state 31
    DOUBLE  shift, and go to state 32
    FALSE   shift, and go to state 33
    TRUE    shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    constant_exp         go to state 37
    expression           go to state 48
    int_expreesion       go to state 39
    bool_expression      go to state 40
    procedure_statement  go to state 41


State 26

   13 variable: VAR ID ':' . var_type
   15         | VAR ID ':' . var_type '=' expression
   16         | VAR ID ':' . var_type '[' int_expreesion ']'

    BOOLEAN  shift, and go to state 42
    CHAR     shift, and go to state 43
    FLOAT    shift, and go to state 44
    INT      shift, and go to state 45
    STRING   shift, and go to state 46

    var_type  go to state 49


State 27

    1 program: OBJECT ID '{' declaration_list method_list '}' .

    $default  reduce using rule 1 (program)


State 28

   28 method: DEF ID $@1 '(' . formal_argument_list ')' method_type compound_statement

    ID  shift, and go to state 50

    $default  reduce using rule 34 (formal_argument)

    formal_argument_list  go to state 51
    formal_argument       go to state 52


State 29

   22 constant_exp: ID . '[' int_expreesion ']'
   50 expression: ID .
   80 procedure_statement: ID . '(' $@6 comma_separated_exp ')'

    '['  shift, and go to state 53
    '('  shift, and go to state 54

    $default  reduce using rule 50 (expression)


State 30

   17 constant_exp: STR .

    $default  reduce using rule 17 (constant_exp)


State 31

   18 constant_exp: NUM .

    $default  reduce using rule 18 (constant_exp)


State 32

   19 constant_exp: DOUBLE .

    $default  reduce using rule 19 (constant_exp)


State 33

   21 constant_exp: FALSE .

    $default  reduce using rule 21 (constant_exp)


State 34

   20 constant_exp: TRUE .

    $default  reduce using rule 20 (constant_exp)


State 35

   56 int_expreesion: '-' . expression

    ID      shift, and go to state 29
    STR     shift, and go to state 30
    NUM     shift, and go to state 31
    DOUBLE  shift, and go to state 32
    FALSE   shift, and go to state 33
    TRUE    shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    constant_exp         go to state 37
    expression           go to state 55
    int_expreesion       go to state 39
    bool_expression      go to state 40
    procedure_statement  go to state 41


State 36

   48 expression: '(' . expression ')'

    ID      shift, and go to state 29
    STR     shift, and go to state 30
    NUM     shift, and go to state 31
    DOUBLE  shift, and go to state 32
    FALSE   shift, and go to state 33
    TRUE    shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    constant_exp         go to state 37
    expression           go to state 56
    int_expreesion       go to state 39
    bool_expression      go to state 40
    procedure_statement  go to state 41


State 37

   49 expression: constant_exp .

    $default  reduce using rule 49 (expression)


State 38

   10 value: VAL ID '=' expression .
   52 int_expreesion: expression . '+' expression
   53               | expression . '-' expression
   54               | expression . '*' expression
   55               | expression . '/' expression
   57 bool_expression: expression . '<' expression
   58                | expression . '>' expression
   59                | expression . LE_OP expression
   60                | expression . EQ_OP expression
   61                | expression . GE_OP expression
   62                | expression . NE_OP expression
   63                | expression . OR_OP expression
   64                | expression . AND_OP expression

    LE_OP   shift, and go to state 57
    GE_OP   shift, and go to state 58
    EQ_OP   shift, and go to state 59
    NE_OP   shift, and go to state 60
    AND_OP  shift, and go to state 61
    OR_OP   shift, and go to state 62
    '<'     shift, and go to state 63
    '>'     shift, and go to state 64
    '+'     shift, and go to state 65
    '-'     shift, and go to state 66
    '*'     shift, and go to state 67
    '/'     shift, and go to state 68

    $default  reduce using rule 10 (value)


State 39

   46 expression: int_expreesion .

    $default  reduce using rule 46 (expression)


State 40

   47 expression: bool_expression .

    $default  reduce using rule 47 (expression)


State 41

   51 expression: procedure_statement .

    $default  reduce using rule 51 (expression)


State 42

    6 var_type: BOOLEAN .

    $default  reduce using rule 6 (var_type)


State 43

    4 var_type: CHAR .

    $default  reduce using rule 4 (var_type)


State 44

    7 var_type: FLOAT .

    $default  reduce using rule 7 (var_type)


State 45

    3 var_type: INT .

    $default  reduce using rule 3 (var_type)


State 46

    5 var_type: STRING .

    $default  reduce using rule 5 (var_type)


State 47

   11 value: VAL ID ':' var_type . '=' expression

    '='  shift, and go to state 69


State 48

   14 variable: VAR ID '=' expression .
   52 int_expreesion: expression . '+' expression
   53               | expression . '-' expression
   54               | expression . '*' expression
   55               | expression . '/' expression
   57 bool_expression: expression . '<' expression
   58                | expression . '>' expression
   59                | expression . LE_OP expression
   60                | expression . EQ_OP expression
   61                | expression . GE_OP expression
   62                | expression . NE_OP expression
   63                | expression . OR_OP expression
   64                | expression . AND_OP expression

    LE_OP   shift, and go to state 57
    GE_OP   shift, and go to state 58
    EQ_OP   shift, and go to state 59
    NE_OP   shift, and go to state 60
    AND_OP  shift, and go to state 61
    OR_OP   shift, and go to state 62
    '<'     shift, and go to state 63
    '>'     shift, and go to state 64
    '+'     shift, and go to state 65
    '-'     shift, and go to state 66
    '*'     shift, and go to state 67
    '/'     shift, and go to state 68

    $default  reduce using rule 14 (variable)


State 49

   13 variable: VAR ID ':' var_type .
   15         | VAR ID ':' var_type . '=' expression
   16         | VAR ID ':' var_type . '[' int_expreesion ']'

    '='  shift, and go to state 70
    '['  shift, and go to state 71

    $default  reduce using rule 13 (variable)


State 50

   33 formal_argument: ID . ':' var_type

    ':'  shift, and go to state 72


State 51

   28 method: DEF ID $@1 '(' formal_argument_list . ')' method_type compound_statement

    ')'  shift, and go to state 73


State 52

   31 formal_argument_list: formal_argument . ',' formal_argument_list
   32                     | formal_argument .

    ','  shift, and go to state 74

    $default  reduce using rule 32 (formal_argument_list)


State 53

   22 constant_exp: ID '[' . int_expreesion ']'

    ID      shift, and go to state 29
    STR     shift, and go to state 30
    NUM     shift, and go to state 31
    DOUBLE  shift, and go to state 32
    FALSE   shift, and go to state 33
    TRUE    shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    constant_exp         go to state 37
    expression           go to state 75
    int_expreesion       go to state 76
    bool_expression      go to state 40
    procedure_statement  go to state 41


State 54

   80 procedure_statement: ID '(' . $@6 comma_separated_exp ')'

    $default  reduce using rule 79 ($@6)

    $@6  go to state 77


State 55

   52 int_expreesion: expression . '+' expression
   53               | expression . '-' expression
   54               | expression . '*' expression
   55               | expression . '/' expression
   56               | '-' expression .
   57 bool_expression: expression . '<' expression
   58                | expression . '>' expression
   59                | expression . LE_OP expression
   60                | expression . EQ_OP expression
   61                | expression . GE_OP expression
   62                | expression . NE_OP expression
   63                | expression . OR_OP expression
   64                | expression . AND_OP expression

    $default  reduce using rule 56 (int_expreesion)


State 56

   48 expression: '(' expression . ')'
   52 int_expreesion: expression . '+' expression
   53               | expression . '-' expression
   54               | expression . '*' expression
   55               | expression . '/' expression
   57 bool_expression: expression . '<' expression
   58                | expression . '>' expression
   59                | expression . LE_OP expression
   60                | expression . EQ_OP expression
   61                | expression . GE_OP expression
   62                | expression . NE_OP expression
   63                | expression . OR_OP expression
   64                | expression . AND_OP expression

    LE_OP   shift, and go to state 57
    GE_OP   shift, and go to state 58
    EQ_OP   shift, and go to state 59
    NE_OP   shift, and go to state 60
    AND_OP  shift, and go to state 61
    OR_OP   shift, and go to state 62
    '<'     shift, and go to state 63
    '>'     shift, and go to state 64
    '+'     shift, and go to state 65
    '-'     shift, and go to state 66
    '*'     shift, and go to state 67
    '/'     shift, and go to state 68
    ')'     shift, and go to state 78


State 57

   59 bool_expression: expression LE_OP . expression

    ID      shift, and go to state 29
    STR     shift, and go to state 30
    NUM     shift, and go to state 31
    DOUBLE  shift, and go to state 32
    FALSE   shift, and go to state 33
    TRUE    shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    constant_exp         go to state 37
    expression           go to state 79
    int_expreesion       go to state 39
    bool_expression      go to state 40
    procedure_statement  go to state 41


State 58

   61 bool_expression: expression GE_OP . expression

    ID      shift, and go to state 29
    STR     shift, and go to state 30
    NUM     shift, and go to state 31
    DOUBLE  shift, and go to state 32
    FALSE   shift, and go to state 33
    TRUE    shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    constant_exp         go to state 37
    expression           go to state 80
    int_expreesion       go to state 39
    bool_expression      go to state 40
    procedure_statement  go to state 41


State 59

   60 bool_expression: expression EQ_OP . expression

    ID      shift, and go to state 29
    STR     shift, and go to state 30
    NUM     shift, and go to state 31
    DOUBLE  shift, and go to state 32
    FALSE   shift, and go to state 33
    TRUE    shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    constant_exp         go to state 37
    expression           go to state 81
    int_expreesion       go to state 39
    bool_expression      go to state 40
    procedure_statement  go to state 41


State 60

   62 bool_expression: expression NE_OP . expression

    ID      shift, and go to state 29
    STR     shift, and go to state 30
    NUM     shift, and go to state 31
    DOUBLE  shift, and go to state 32
    FALSE   shift, and go to state 33
    TRUE    shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    constant_exp         go to state 37
    expression           go to state 82
    int_expreesion       go to state 39
    bool_expression      go to state 40
    procedure_statement  go to state 41


State 61

   64 bool_expression: expression AND_OP . expression

    ID      shift, and go to state 29
    STR     shift, and go to state 30
    NUM     shift, and go to state 31
    DOUBLE  shift, and go to state 32
    FALSE   shift, and go to state 33
    TRUE    shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    constant_exp         go to state 37
    expression           go to state 83
    int_expreesion       go to state 39
    bool_expression      go to state 40
    procedure_statement  go to state 41


State 62

   63 bool_expression: expression OR_OP . expression

    ID      shift, and go to state 29
    STR     shift, and go to state 30
    NUM     shift, and go to state 31
    DOUBLE  shift, and go to state 32
    FALSE   shift, and go to state 33
    TRUE    shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    constant_exp         go to state 37
    expression           go to state 84
    int_expreesion       go to state 39
    bool_expression      go to state 40
    procedure_statement  go to state 41


State 63

   57 bool_expression: expression '<' . expression

    ID      shift, and go to state 29
    STR     shift, and go to state 30
    NUM     shift, and go to state 31
    DOUBLE  shift, and go to state 32
    FALSE   shift, and go to state 33
    TRUE    shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    constant_exp         go to state 37
    expression           go to state 85
    int_expreesion       go to state 39
    bool_expression      go to state 40
    procedure_statement  go to state 41


State 64

   58 bool_expression: expression '>' . expression

    ID      shift, and go to state 29
    STR     shift, and go to state 30
    NUM     shift, and go to state 31
    DOUBLE  shift, and go to state 32
    FALSE   shift, and go to state 33
    TRUE    shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    constant_exp         go to state 37
    expression           go to state 86
    int_expreesion       go to state 39
    bool_expression      go to state 40
    procedure_statement  go to state 41


State 65

   52 int_expreesion: expression '+' . expression

    ID      shift, and go to state 29
    STR     shift, and go to state 30
    NUM     shift, and go to state 31
    DOUBLE  shift, and go to state 32
    FALSE   shift, and go to state 33
    TRUE    shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    constant_exp         go to state 37
    expression           go to state 87
    int_expreesion       go to state 39
    bool_expression      go to state 40
    procedure_statement  go to state 41


State 66

   53 int_expreesion: expression '-' . expression

    ID      shift, and go to state 29
    STR     shift, and go to state 30
    NUM     shift, and go to state 31
    DOUBLE  shift, and go to state 32
    FALSE   shift, and go to state 33
    TRUE    shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    constant_exp         go to state 37
    expression           go to state 88
    int_expreesion       go to state 39
    bool_expression      go to state 40
    procedure_statement  go to state 41


State 67

   54 int_expreesion: expression '*' . expression

    ID      shift, and go to state 29
    STR     shift, and go to state 30
    NUM     shift, and go to state 31
    DOUBLE  shift, and go to state 32
    FALSE   shift, and go to state 33
    TRUE    shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    constant_exp         go to state 37
    expression           go to state 89
    int_expreesion       go to state 39
    bool_expression      go to state 40
    procedure_statement  go to state 41


State 68

   55 int_expreesion: expression '/' . expression

    ID      shift, and go to state 29
    STR     shift, and go to state 30
    NUM     shift, and go to state 31
    DOUBLE  shift, and go to state 32
    FALSE   shift, and go to state 33
    TRUE    shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    constant_exp         go to state 37
    expression           go to state 90
    int_expreesion       go to state 39
    bool_expression      go to state 40
    procedure_statement  go to state 41


State 69

   11 value: VAL ID ':' var_type '=' . expression

    ID      shift, and go to state 29
    STR     shift, and go to state 30
    NUM     shift, and go to state 31
    DOUBLE  shift, and go to state 32
    FALSE   shift, and go to state 33
    TRUE    shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    constant_exp         go to state 37
    expression           go to state 91
    int_expreesion       go to state 39
    bool_expression      go to state 40
    procedure_statement  go to state 41


State 70

   15 variable: VAR ID ':' var_type '=' . expression

    ID      shift, and go to state 29
    STR     shift, and go to state 30
    NUM     shift, and go to state 31
    DOUBLE  shift, and go to state 32
    FALSE   shift, and go to state 33
    TRUE    shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    constant_exp         go to state 37
    expression           go to state 92
    int_expreesion       go to state 39
    bool_expression      go to state 40
    procedure_statement  go to state 41


State 71

   16 variable: VAR ID ':' var_type '[' . int_expreesion ']'

    ID      shift, and go to state 29
    STR     shift, and go to state 30
    NUM     shift, and go to state 31
    DOUBLE  shift, and go to state 32
    FALSE   shift, and go to state 33
    TRUE    shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    constant_exp         go to state 37
    expression           go to state 75
    int_expreesion       go to state 93
    bool_expression      go to state 40
    procedure_statement  go to state 41


State 72

   33 formal_argument: ID ':' . var_type

    BOOLEAN  shift, and go to state 42
    CHAR     shift, and go to state 43
    FLOAT    shift, and go to state 44
    INT      shift, and go to state 45
    STRING   shift, and go to state 46

    var_type  go to state 94


State 73

   28 method: DEF ID $@1 '(' formal_argument_list ')' . method_type compound_statement

    ':'  shift, and go to state 95

    $default  reduce using rule 30 (method_type)

    method_type  go to state 96


State 74

   31 formal_argument_list: formal_argument ',' . formal_argument_list

    ID  shift, and go to state 50

    $default  reduce using rule 34 (formal_argument)

    formal_argument_list  go to state 97
    formal_argument       go to state 52


State 75

   52 int_expreesion: expression . '+' expression
   53               | expression . '-' expression
   54               | expression . '*' expression
   55               | expression . '/' expression
   57 bool_expression: expression . '<' expression
   58                | expression . '>' expression
   59                | expression . LE_OP expression
   60                | expression . EQ_OP expression
   61                | expression . GE_OP expression
   62                | expression . NE_OP expression
   63                | expression . OR_OP expression
   64                | expression . AND_OP expression

    LE_OP   shift, and go to state 57
    GE_OP   shift, and go to state 58
    EQ_OP   shift, and go to state 59
    NE_OP   shift, and go to state 60
    AND_OP  shift, and go to state 61
    OR_OP   shift, and go to state 62
    '<'     shift, and go to state 63
    '>'     shift, and go to state 64
    '+'     shift, and go to state 65
    '-'     shift, and go to state 66
    '*'     shift, and go to state 67
    '/'     shift, and go to state 68


State 76

   22 constant_exp: ID '[' int_expreesion . ']'
   46 expression: int_expreesion .

    ']'  shift, and go to state 98

    $default  reduce using rule 46 (expression)


State 77

   80 procedure_statement: ID '(' $@6 . comma_separated_exp ')'

    ID      shift, and go to state 29
    STR     shift, and go to state 30
    NUM     shift, and go to state 31
    DOUBLE  shift, and go to state 32
    FALSE   shift, and go to state 33
    TRUE    shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    $default  reduce using rule 83 (comma_separated_exp)

    constant_exp         go to state 37
    expression           go to state 99
    int_expreesion       go to state 39
    bool_expression      go to state 40
    procedure_statement  go to state 41
    comma_separated_exp  go to state 100


State 78

   48 expression: '(' expression ')' .

    $default  reduce using rule 48 (expression)


State 79

   52 int_expreesion: expression . '+' expression
   53               | expression . '-' expression
   54               | expression . '*' expression
   55               | expression . '/' expression
   57 bool_expression: expression . '<' expression
   58                | expression . '>' expression
   59                | expression . LE_OP expression
   59                | expression LE_OP expression .
   60                | expression . EQ_OP expression
   61                | expression . GE_OP expression
   62                | expression . NE_OP expression
   63                | expression . OR_OP expression
   64                | expression . AND_OP expression

    '+'  shift, and go to state 65
    '-'  shift, and go to state 66
    '*'  shift, and go to state 67
    '/'  shift, and go to state 68

    $default  reduce using rule 59 (bool_expression)


State 80

   52 int_expreesion: expression . '+' expression
   53               | expression . '-' expression
   54               | expression . '*' expression
   55               | expression . '/' expression
   57 bool_expression: expression . '<' expression
   58                | expression . '>' expression
   59                | expression . LE_OP expression
   60                | expression . EQ_OP expression
   61                | expression . GE_OP expression
   61                | expression GE_OP expression .
   62                | expression . NE_OP expression
   63                | expression . OR_OP expression
   64                | expression . AND_OP expression

    '+'  shift, and go to state 65
    '-'  shift, and go to state 66
    '*'  shift, and go to state 67
    '/'  shift, and go to state 68

    $default  reduce using rule 61 (bool_expression)


State 81

   52 int_expreesion: expression . '+' expression
   53               | expression . '-' expression
   54               | expression . '*' expression
   55               | expression . '/' expression
   57 bool_expression: expression . '<' expression
   58                | expression . '>' expression
   59                | expression . LE_OP expression
   60                | expression . EQ_OP expression
   60                | expression EQ_OP expression .
   61                | expression . GE_OP expression
   62                | expression . NE_OP expression
   63                | expression . OR_OP expression
   64                | expression . AND_OP expression

    '+'  shift, and go to state 65
    '-'  shift, and go to state 66
    '*'  shift, and go to state 67
    '/'  shift, and go to state 68

    $default  reduce using rule 60 (bool_expression)


State 82

   52 int_expreesion: expression . '+' expression
   53               | expression . '-' expression
   54               | expression . '*' expression
   55               | expression . '/' expression
   57 bool_expression: expression . '<' expression
   58                | expression . '>' expression
   59                | expression . LE_OP expression
   60                | expression . EQ_OP expression
   61                | expression . GE_OP expression
   62                | expression . NE_OP expression
   62                | expression NE_OP expression .
   63                | expression . OR_OP expression
   64                | expression . AND_OP expression

    '+'  shift, and go to state 65
    '-'  shift, and go to state 66
    '*'  shift, and go to state 67
    '/'  shift, and go to state 68

    $default  reduce using rule 62 (bool_expression)


State 83

   52 int_expreesion: expression . '+' expression
   53               | expression . '-' expression
   54               | expression . '*' expression
   55               | expression . '/' expression
   57 bool_expression: expression . '<' expression
   58                | expression . '>' expression
   59                | expression . LE_OP expression
   60                | expression . EQ_OP expression
   61                | expression . GE_OP expression
   62                | expression . NE_OP expression
   63                | expression . OR_OP expression
   64                | expression . AND_OP expression
   64                | expression AND_OP expression .

    LE_OP  shift, and go to state 57
    GE_OP  shift, and go to state 58
    EQ_OP  shift, and go to state 59
    NE_OP  shift, and go to state 60
    '<'    shift, and go to state 63
    '>'    shift, and go to state 64
    '+'    shift, and go to state 65
    '-'    shift, and go to state 66
    '*'    shift, and go to state 67
    '/'    shift, and go to state 68

    $default  reduce using rule 64 (bool_expression)


State 84

   52 int_expreesion: expression . '+' expression
   53               | expression . '-' expression
   54               | expression . '*' expression
   55               | expression . '/' expression
   57 bool_expression: expression . '<' expression
   58                | expression . '>' expression
   59                | expression . LE_OP expression
   60                | expression . EQ_OP expression
   61                | expression . GE_OP expression
   62                | expression . NE_OP expression
   63                | expression . OR_OP expression
   63                | expression OR_OP expression .
   64                | expression . AND_OP expression

    LE_OP   shift, and go to state 57
    GE_OP   shift, and go to state 58
    EQ_OP   shift, and go to state 59
    NE_OP   shift, and go to state 60
    AND_OP  shift, and go to state 61
    '<'     shift, and go to state 63
    '>'     shift, and go to state 64
    '+'     shift, and go to state 65
    '-'     shift, and go to state 66
    '*'     shift, and go to state 67
    '/'     shift, and go to state 68

    $default  reduce using rule 63 (bool_expression)


State 85

   52 int_expreesion: expression . '+' expression
   53               | expression . '-' expression
   54               | expression . '*' expression
   55               | expression . '/' expression
   57 bool_expression: expression . '<' expression
   57                | expression '<' expression .
   58                | expression . '>' expression
   59                | expression . LE_OP expression
   60                | expression . EQ_OP expression
   61                | expression . GE_OP expression
   62                | expression . NE_OP expression
   63                | expression . OR_OP expression
   64                | expression . AND_OP expression

    '+'  shift, and go to state 65
    '-'  shift, and go to state 66
    '*'  shift, and go to state 67
    '/'  shift, and go to state 68

    $default  reduce using rule 57 (bool_expression)


State 86

   52 int_expreesion: expression . '+' expression
   53               | expression . '-' expression
   54               | expression . '*' expression
   55               | expression . '/' expression
   57 bool_expression: expression . '<' expression
   58                | expression . '>' expression
   58                | expression '>' expression .
   59                | expression . LE_OP expression
   60                | expression . EQ_OP expression
   61                | expression . GE_OP expression
   62                | expression . NE_OP expression
   63                | expression . OR_OP expression
   64                | expression . AND_OP expression

    '+'  shift, and go to state 65
    '-'  shift, and go to state 66
    '*'  shift, and go to state 67
    '/'  shift, and go to state 68

    $default  reduce using rule 58 (bool_expression)


State 87

   52 int_expreesion: expression . '+' expression
   52               | expression '+' expression .
   53               | expression . '-' expression
   54               | expression . '*' expression
   55               | expression . '/' expression
   57 bool_expression: expression . '<' expression
   58                | expression . '>' expression
   59                | expression . LE_OP expression
   60                | expression . EQ_OP expression
   61                | expression . GE_OP expression
   62                | expression . NE_OP expression
   63                | expression . OR_OP expression
   64                | expression . AND_OP expression

    '*'  shift, and go to state 67
    '/'  shift, and go to state 68

    $default  reduce using rule 52 (int_expreesion)


State 88

   52 int_expreesion: expression . '+' expression
   53               | expression . '-' expression
   53               | expression '-' expression .
   54               | expression . '*' expression
   55               | expression . '/' expression
   57 bool_expression: expression . '<' expression
   58                | expression . '>' expression
   59                | expression . LE_OP expression
   60                | expression . EQ_OP expression
   61                | expression . GE_OP expression
   62                | expression . NE_OP expression
   63                | expression . OR_OP expression
   64                | expression . AND_OP expression

    '*'  shift, and go to state 67
    '/'  shift, and go to state 68

    $default  reduce using rule 53 (int_expreesion)


State 89

   52 int_expreesion: expression . '+' expression
   53               | expression . '-' expression
   54               | expression . '*' expression
   54               | expression '*' expression .
   55               | expression . '/' expression
   57 bool_expression: expression . '<' expression
   58                | expression . '>' expression
   59                | expression . LE_OP expression
   60                | expression . EQ_OP expression
   61                | expression . GE_OP expression
   62                | expression . NE_OP expression
   63                | expression . OR_OP expression
   64                | expression . AND_OP expression

    $default  reduce using rule 54 (int_expreesion)


State 90

   52 int_expreesion: expression . '+' expression
   53               | expression . '-' expression
   54               | expression . '*' expression
   55               | expression . '/' expression
   55               | expression '/' expression .
   57 bool_expression: expression . '<' expression
   58                | expression . '>' expression
   59                | expression . LE_OP expression
   60                | expression . EQ_OP expression
   61                | expression . GE_OP expression
   62                | expression . NE_OP expression
   63                | expression . OR_OP expression
   64                | expression . AND_OP expression

    $default  reduce using rule 55 (int_expreesion)


State 91

   11 value: VAL ID ':' var_type '=' expression .
   52 int_expreesion: expression . '+' expression
   53               | expression . '-' expression
   54               | expression . '*' expression
   55               | expression . '/' expression
   57 bool_expression: expression . '<' expression
   58                | expression . '>' expression
   59                | expression . LE_OP expression
   60                | expression . EQ_OP expression
   61                | expression . GE_OP expression
   62                | expression . NE_OP expression
   63                | expression . OR_OP expression
   64                | expression . AND_OP expression

    LE_OP   shift, and go to state 57
    GE_OP   shift, and go to state 58
    EQ_OP   shift, and go to state 59
    NE_OP   shift, and go to state 60
    AND_OP  shift, and go to state 61
    OR_OP   shift, and go to state 62
    '<'     shift, and go to state 63
    '>'     shift, and go to state 64
    '+'     shift, and go to state 65
    '-'     shift, and go to state 66
    '*'     shift, and go to state 67
    '/'     shift, and go to state 68

    $default  reduce using rule 11 (value)


State 92

   15 variable: VAR ID ':' var_type '=' expression .
   52 int_expreesion: expression . '+' expression
   53               | expression . '-' expression
   54               | expression . '*' expression
   55               | expression . '/' expression
   57 bool_expression: expression . '<' expression
   58                | expression . '>' expression
   59                | expression . LE_OP expression
   60                | expression . EQ_OP expression
   61                | expression . GE_OP expression
   62                | expression . NE_OP expression
   63                | expression . OR_OP expression
   64                | expression . AND_OP expression

    LE_OP   shift, and go to state 57
    GE_OP   shift, and go to state 58
    EQ_OP   shift, and go to state 59
    NE_OP   shift, and go to state 60
    AND_OP  shift, and go to state 61
    OR_OP   shift, and go to state 62
    '<'     shift, and go to state 63
    '>'     shift, and go to state 64
    '+'     shift, and go to state 65
    '-'     shift, and go to state 66
    '*'     shift, and go to state 67
    '/'     shift, and go to state 68

    $default  reduce using rule 15 (variable)


State 93

   16 variable: VAR ID ':' var_type '[' int_expreesion . ']'
   46 expression: int_expreesion .

    ']'  shift, and go to state 101

    $default  reduce using rule 46 (expression)


State 94

   33 formal_argument: ID ':' var_type .

    $default  reduce using rule 33 (formal_argument)


State 95

   29 method_type: ':' . var_type

    BOOLEAN  shift, and go to state 42
    CHAR     shift, and go to state 43
    FLOAT    shift, and go to state 44
    INT      shift, and go to state 45
    STRING   shift, and go to state 46

    var_type  go to state 102


State 96

   28 method: DEF ID $@1 '(' formal_argument_list ')' method_type . compound_statement

    '{'  shift, and go to state 103

    compound_statement  go to state 104


State 97

   31 formal_argument_list: formal_argument ',' formal_argument_list .

    $default  reduce using rule 31 (formal_argument_list)


State 98

   22 constant_exp: ID '[' int_expreesion ']' .

    $default  reduce using rule 22 (constant_exp)


State 99

   52 int_expreesion: expression . '+' expression
   53               | expression . '-' expression
   54               | expression . '*' expression
   55               | expression . '/' expression
   57 bool_expression: expression . '<' expression
   58                | expression . '>' expression
   59                | expression . LE_OP expression
   60                | expression . EQ_OP expression
   61                | expression . GE_OP expression
   62                | expression . NE_OP expression
   63                | expression . OR_OP expression
   64                | expression . AND_OP expression
   81 comma_separated_exp: expression . ',' comma_separated_exp
   82                    | expression .

    LE_OP   shift, and go to state 57
    GE_OP   shift, and go to state 58
    EQ_OP   shift, and go to state 59
    NE_OP   shift, and go to state 60
    AND_OP  shift, and go to state 61
    OR_OP   shift, and go to state 62
    '<'     shift, and go to state 63
    '>'     shift, and go to state 64
    '+'     shift, and go to state 65
    '-'     shift, and go to state 66
    '*'     shift, and go to state 67
    '/'     shift, and go to state 68
    ','     shift, and go to state 105

    $default  reduce using rule 82 (comma_separated_exp)


State 100

   80 procedure_statement: ID '(' $@6 comma_separated_exp . ')'

    ')'  shift, and go to state 106


State 101

   16 variable: VAR ID ':' var_type '[' int_expreesion ']' .

    $default  reduce using rule 16 (variable)


State 102

   29 method_type: ':' var_type .

    $default  reduce using rule 29 (method_type)


State 103

   66 compound_statement: '{' . $@2 declaration_list statement_list '}'
   68                   | '{' . $@3 statement_list '}'
   69                   | '{' . '}'
   71                   | '{' . $@4 declaration_list '}'

    '}'  shift, and go to state 107

    VAL       reduce using rule 65 ($@2)
    VAL       [reduce using rule 70 ($@4)]
    VAR       reduce using rule 65 ($@2)
    VAR       [reduce using rule 70 ($@4)]
    $default  reduce using rule 67 ($@3)

    $@2  go to state 108
    $@3  go to state 109
    $@4  go to state 110


State 104

   28 method: DEF ID $@1 '(' formal_argument_list ')' method_type compound_statement .

    $default  reduce using rule 28 (method)


State 105

   81 comma_separated_exp: expression ',' . comma_separated_exp

    ID      shift, and go to state 29
    STR     shift, and go to state 30
    NUM     shift, and go to state 31
    DOUBLE  shift, and go to state 32
    FALSE   shift, and go to state 33
    TRUE    shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    $default  reduce using rule 83 (comma_separated_exp)

    constant_exp         go to state 37
    expression           go to state 99
    int_expreesion       go to state 39
    bool_expression      go to state 40
    procedure_statement  go to state 41
    comma_separated_exp  go to state 111


State 106

   80 procedure_statement: ID '(' $@6 comma_separated_exp ')' .

    $default  reduce using rule 80 (procedure_statement)


State 107

   69 compound_statement: '{' '}' .

    $default  reduce using rule 69 (compound_statement)


State 108

   66 compound_statement: '{' $@2 . declaration_list statement_list '}'

    VAL  shift, and go to state 7
    VAR  shift, and go to state 8

    declaration       go to state 9
    value             go to state 10
    variable          go to state 11
    declaration_list  go to state 112


State 109

   68 compound_statement: '{' $@3 . statement_list '}'

    FOR      shift, and go to state 113
    IF       shift, and go to state 114
    PRINT    shift, and go to state 115
    PRINTLN  shift, and go to state 116
    RETURN   shift, and go to state 117
    READ     shift, and go to state 118
    WHILE    shift, and go to state 119
    ID       shift, and go to state 120
    '{'      shift, and go to state 103

    statement            go to state 121
    simple               go to state 122
    compound_statement   go to state 123
    statement_list       go to state 124
    selection_statement  go to state 125
    iteration_statement  go to state 126


State 110

   71 compound_statement: '{' $@4 . declaration_list '}'

    VAL  shift, and go to state 7
    VAR  shift, and go to state 8

    declaration       go to state 9
    value             go to state 10
    variable          go to state 11
    declaration_list  go to state 127


State 111

   81 comma_separated_exp: expression ',' comma_separated_exp .

    $default  reduce using rule 81 (comma_separated_exp)


State 112

   24 declaration_list: declaration_list . declaration
   66 compound_statement: '{' $@2 declaration_list . statement_list '}'

    FOR      shift, and go to state 113
    IF       shift, and go to state 114
    PRINT    shift, and go to state 115
    PRINTLN  shift, and go to state 116
    RETURN   shift, and go to state 117
    READ     shift, and go to state 118
    VAL      shift, and go to state 7
    VAR      shift, and go to state 8
    WHILE    shift, and go to state 119
    ID       shift, and go to state 120
    '{'      shift, and go to state 103

    declaration          go to state 18
    value                go to state 10
    variable             go to state 11
    statement            go to state 121
    simple               go to state 122
    compound_statement   go to state 123
    statement_list       go to state 128
    selection_statement  go to state 125
    iteration_statement  go to state 126


State 113

   78 iteration_statement: FOR . '(' ID '<' '-' NUM TO NUM ')' $@5 statement

    '('  shift, and go to state 129


State 114

   74 selection_statement: IF . '(' expression ')' statement ELSE statement
   75                    | IF . '(' expression ')' statement

    '('  shift, and go to state 130


State 115

   41 simple: PRINT . expression

    ID      shift, and go to state 29
    STR     shift, and go to state 30
    NUM     shift, and go to state 31
    DOUBLE  shift, and go to state 32
    FALSE   shift, and go to state 33
    TRUE    shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    constant_exp         go to state 37
    expression           go to state 131
    int_expreesion       go to state 39
    bool_expression      go to state 40
    procedure_statement  go to state 41


State 116

   42 simple: PRINTLN . expression

    ID      shift, and go to state 29
    STR     shift, and go to state 30
    NUM     shift, and go to state 31
    DOUBLE  shift, and go to state 32
    FALSE   shift, and go to state 33
    TRUE    shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    constant_exp         go to state 37
    expression           go to state 132
    int_expreesion       go to state 39
    bool_expression      go to state 40
    procedure_statement  go to state 41


State 117

   44 simple: RETURN . expression
   45       | RETURN .

    ID      shift, and go to state 29
    STR     shift, and go to state 30
    NUM     shift, and go to state 31
    DOUBLE  shift, and go to state 32
    FALSE   shift, and go to state 33
    TRUE    shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    ID        [reduce using rule 45 (simple)]
    $default  reduce using rule 45 (simple)

    constant_exp         go to state 37
    expression           go to state 133
    int_expreesion       go to state 39
    bool_expression      go to state 40
    procedure_statement  go to state 41


State 118

   43 simple: READ . ID

    ID  shift, and go to state 134


State 119

   76 iteration_statement: WHILE . '(' expression ')' statement

    '('  shift, and go to state 135


State 120

   39 simple: ID . '=' expression
   40       | ID . '[' int_expreesion ']' '=' expression

    '='  shift, and go to state 136
    '['  shift, and go to state 137


State 121

   72 statement_list: statement .

    $default  reduce using rule 72 (statement_list)


State 122

   35 statement: simple .

    $default  reduce using rule 35 (statement)


State 123

   36 statement: compound_statement .

    $default  reduce using rule 36 (statement)


State 124

   68 compound_statement: '{' $@3 statement_list . '}'
   73 statement_list: statement_list . statement

    FOR      shift, and go to state 113
    IF       shift, and go to state 114
    PRINT    shift, and go to state 115
    PRINTLN  shift, and go to state 116
    RETURN   shift, and go to state 117
    READ     shift, and go to state 118
    WHILE    shift, and go to state 119
    ID       shift, and go to state 120
    '{'      shift, and go to state 103
    '}'      shift, and go to state 138

    statement            go to state 139
    simple               go to state 122
    compound_statement   go to state 123
    selection_statement  go to state 125
    iteration_statement  go to state 126


State 125

   37 statement: selection_statement .

    $default  reduce using rule 37 (statement)


State 126

   38 statement: iteration_statement .

    $default  reduce using rule 38 (statement)


State 127

   24 declaration_list: declaration_list . declaration
   71 compound_statement: '{' $@4 declaration_list . '}'

    VAL  shift, and go to state 7
    VAR  shift, and go to state 8
    '}'  shift, and go to state 140

    declaration  go to state 18
    value        go to state 10
    variable     go to state 11


State 128

   66 compound_statement: '{' $@2 declaration_list statement_list . '}'
   73 statement_list: statement_list . statement

    FOR      shift, and go to state 113
    IF       shift, and go to state 114
    PRINT    shift, and go to state 115
    PRINTLN  shift, and go to state 116
    RETURN   shift, and go to state 117
    READ     shift, and go to state 118
    WHILE    shift, and go to state 119
    ID       shift, and go to state 120
    '{'      shift, and go to state 103
    '}'      shift, and go to state 141

    statement            go to state 139
    simple               go to state 122
    compound_statement   go to state 123
    selection_statement  go to state 125
    iteration_statement  go to state 126


State 129

   78 iteration_statement: FOR '(' . ID '<' '-' NUM TO NUM ')' $@5 statement

    ID  shift, and go to state 142


State 130

   74 selection_statement: IF '(' . expression ')' statement ELSE statement
   75                    | IF '(' . expression ')' statement

    ID      shift, and go to state 29
    STR     shift, and go to state 30
    NUM     shift, and go to state 31
    DOUBLE  shift, and go to state 32
    FALSE   shift, and go to state 33
    TRUE    shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    constant_exp         go to state 37
    expression           go to state 143
    int_expreesion       go to state 39
    bool_expression      go to state 40
    procedure_statement  go to state 41


State 131

   41 simple: PRINT expression .
   52 int_expreesion: expression . '+' expression
   53               | expression . '-' expression
   54               | expression . '*' expression
   55               | expression . '/' expression
   57 bool_expression: expression . '<' expression
   58                | expression . '>' expression
   59                | expression . LE_OP expression
   60                | expression . EQ_OP expression
   61                | expression . GE_OP expression
   62                | expression . NE_OP expression
   63                | expression . OR_OP expression
   64                | expression . AND_OP expression

    LE_OP   shift, and go to state 57
    GE_OP   shift, and go to state 58
    EQ_OP   shift, and go to state 59
    NE_OP   shift, and go to state 60
    AND_OP  shift, and go to state 61
    OR_OP   shift, and go to state 62
    '<'     shift, and go to state 63
    '>'     shift, and go to state 64
    '+'     shift, and go to state 65
    '-'     shift, and go to state 66
    '*'     shift, and go to state 67
    '/'     shift, and go to state 68

    $default  reduce using rule 41 (simple)


State 132

   42 simple: PRINTLN expression .
   52 int_expreesion: expression . '+' expression
   53               | expression . '-' expression
   54               | expression . '*' expression
   55               | expression . '/' expression
   57 bool_expression: expression . '<' expression
   58                | expression . '>' expression
   59                | expression . LE_OP expression
   60                | expression . EQ_OP expression
   61                | expression . GE_OP expression
   62                | expression . NE_OP expression
   63                | expression . OR_OP expression
   64                | expression . AND_OP expression

    LE_OP   shift, and go to state 57
    GE_OP   shift, and go to state 58
    EQ_OP   shift, and go to state 59
    NE_OP   shift, and go to state 60
    AND_OP  shift, and go to state 61
    OR_OP   shift, and go to state 62
    '<'     shift, and go to state 63
    '>'     shift, and go to state 64
    '+'     shift, and go to state 65
    '-'     shift, and go to state 66
    '*'     shift, and go to state 67
    '/'     shift, and go to state 68

    $default  reduce using rule 42 (simple)


State 133

   44 simple: RETURN expression .
   52 int_expreesion: expression . '+' expression
   53               | expression . '-' expression
   54               | expression . '*' expression
   55               | expression . '/' expression
   57 bool_expression: expression . '<' expression
   58                | expression . '>' expression
   59                | expression . LE_OP expression
   60                | expression . EQ_OP expression
   61                | expression . GE_OP expression
   62                | expression . NE_OP expression
   63                | expression . OR_OP expression
   64                | expression . AND_OP expression

    LE_OP   shift, and go to state 57
    GE_OP   shift, and go to state 58
    EQ_OP   shift, and go to state 59
    NE_OP   shift, and go to state 60
    AND_OP  shift, and go to state 61
    OR_OP   shift, and go to state 62
    '<'     shift, and go to state 63
    '>'     shift, and go to state 64
    '+'     shift, and go to state 65
    '-'     shift, and go to state 66
    '*'     shift, and go to state 67
    '/'     shift, and go to state 68

    $default  reduce using rule 44 (simple)


State 134

   43 simple: READ ID .

    $default  reduce using rule 43 (simple)


State 135

   76 iteration_statement: WHILE '(' . expression ')' statement

    ID      shift, and go to state 29
    STR     shift, and go to state 30
    NUM     shift, and go to state 31
    DOUBLE  shift, and go to state 32
    FALSE   shift, and go to state 33
    TRUE    shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    constant_exp         go to state 37
    expression           go to state 144
    int_expreesion       go to state 39
    bool_expression      go to state 40
    procedure_statement  go to state 41


State 136

   39 simple: ID '=' . expression

    ID      shift, and go to state 29
    STR     shift, and go to state 30
    NUM     shift, and go to state 31
    DOUBLE  shift, and go to state 32
    FALSE   shift, and go to state 33
    TRUE    shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    constant_exp         go to state 37
    expression           go to state 145
    int_expreesion       go to state 39
    bool_expression      go to state 40
    procedure_statement  go to state 41


State 137

   40 simple: ID '[' . int_expreesion ']' '=' expression

    ID      shift, and go to state 29
    STR     shift, and go to state 30
    NUM     shift, and go to state 31
    DOUBLE  shift, and go to state 32
    FALSE   shift, and go to state 33
    TRUE    shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    constant_exp         go to state 37
    expression           go to state 75
    int_expreesion       go to state 146
    bool_expression      go to state 40
    procedure_statement  go to state 41


State 138

   68 compound_statement: '{' $@3 statement_list '}' .

    $default  reduce using rule 68 (compound_statement)


State 139

   73 statement_list: statement_list statement .

    $default  reduce using rule 73 (statement_list)


State 140

   71 compound_statement: '{' $@4 declaration_list '}' .

    $default  reduce using rule 71 (compound_statement)


State 141

   66 compound_statement: '{' $@2 declaration_list statement_list '}' .

    $default  reduce using rule 66 (compound_statement)


State 142

   78 iteration_statement: FOR '(' ID . '<' '-' NUM TO NUM ')' $@5 statement

    '<'  shift, and go to state 147


State 143

   52 int_expreesion: expression . '+' expression
   53               | expression . '-' expression
   54               | expression . '*' expression
   55               | expression . '/' expression
   57 bool_expression: expression . '<' expression
   58                | expression . '>' expression
   59                | expression . LE_OP expression
   60                | expression . EQ_OP expression
   61                | expression . GE_OP expression
   62                | expression . NE_OP expression
   63                | expression . OR_OP expression
   64                | expression . AND_OP expression
   74 selection_statement: IF '(' expression . ')' statement ELSE statement
   75                    | IF '(' expression . ')' statement

    LE_OP   shift, and go to state 57
    GE_OP   shift, and go to state 58
    EQ_OP   shift, and go to state 59
    NE_OP   shift, and go to state 60
    AND_OP  shift, and go to state 61
    OR_OP   shift, and go to state 62
    '<'     shift, and go to state 63
    '>'     shift, and go to state 64
    '+'     shift, and go to state 65
    '-'     shift, and go to state 66
    '*'     shift, and go to state 67
    '/'     shift, and go to state 68
    ')'     shift, and go to state 148


State 144

   52 int_expreesion: expression . '+' expression
   53               | expression . '-' expression
   54               | expression . '*' expression
   55               | expression . '/' expression
   57 bool_expression: expression . '<' expression
   58                | expression . '>' expression
   59                | expression . LE_OP expression
   60                | expression . EQ_OP expression
   61                | expression . GE_OP expression
   62                | expression . NE_OP expression
   63                | expression . OR_OP expression
   64                | expression . AND_OP expression
   76 iteration_statement: WHILE '(' expression . ')' statement

    LE_OP   shift, and go to state 57
    GE_OP   shift, and go to state 58
    EQ_OP   shift, and go to state 59
    NE_OP   shift, and go to state 60
    AND_OP  shift, and go to state 61
    OR_OP   shift, and go to state 62
    '<'     shift, and go to state 63
    '>'     shift, and go to state 64
    '+'     shift, and go to state 65
    '-'     shift, and go to state 66
    '*'     shift, and go to state 67
    '/'     shift, and go to state 68
    ')'     shift, and go to state 149


State 145

   39 simple: ID '=' expression .
   52 int_expreesion: expression . '+' expression
   53               | expression . '-' expression
   54               | expression . '*' expression
   55               | expression . '/' expression
   57 bool_expression: expression . '<' expression
   58                | expression . '>' expression
   59                | expression . LE_OP expression
   60                | expression . EQ_OP expression
   61                | expression . GE_OP expression
   62                | expression . NE_OP expression
   63                | expression . OR_OP expression
   64                | expression . AND_OP expression

    LE_OP   shift, and go to state 57
    GE_OP   shift, and go to state 58
    EQ_OP   shift, and go to state 59
    NE_OP   shift, and go to state 60
    AND_OP  shift, and go to state 61
    OR_OP   shift, and go to state 62
    '<'     shift, and go to state 63
    '>'     shift, and go to state 64
    '+'     shift, and go to state 65
    '-'     shift, and go to state 66
    '*'     shift, and go to state 67
    '/'     shift, and go to state 68

    $default  reduce using rule 39 (simple)


State 146

   40 simple: ID '[' int_expreesion . ']' '=' expression
   46 expression: int_expreesion .

    ']'  shift, and go to state 150

    $default  reduce using rule 46 (expression)


State 147

   78 iteration_statement: FOR '(' ID '<' . '-' NUM TO NUM ')' $@5 statement

    '-'  shift, and go to state 151


State 148

   74 selection_statement: IF '(' expression ')' . statement ELSE statement
   75                    | IF '(' expression ')' . statement

    FOR      shift, and go to state 113
    IF       shift, and go to state 114
    PRINT    shift, and go to state 115
    PRINTLN  shift, and go to state 116
    RETURN   shift, and go to state 117
    READ     shift, and go to state 118
    WHILE    shift, and go to state 119
    ID       shift, and go to state 120
    '{'      shift, and go to state 103

    statement            go to state 152
    simple               go to state 122
    compound_statement   go to state 123
    selection_statement  go to state 125
    iteration_statement  go to state 126


State 149

   76 iteration_statement: WHILE '(' expression ')' . statement

    FOR      shift, and go to state 113
    IF       shift, and go to state 114
    PRINT    shift, and go to state 115
    PRINTLN  shift, and go to state 116
    RETURN   shift, and go to state 117
    READ     shift, and go to state 118
    WHILE    shift, and go to state 119
    ID       shift, and go to state 120
    '{'      shift, and go to state 103

    statement            go to state 153
    simple               go to state 122
    compound_statement   go to state 123
    selection_statement  go to state 125
    iteration_statement  go to state 126


State 150

   40 simple: ID '[' int_expreesion ']' . '=' expression

    '='  shift, and go to state 154


State 151

   78 iteration_statement: FOR '(' ID '<' '-' . NUM TO NUM ')' $@5 statement

    NUM  shift, and go to state 155


State 152

   74 selection_statement: IF '(' expression ')' statement . ELSE statement
   75                    | IF '(' expression ')' statement .

    ELSE  shift, and go to state 156

    ELSE      [reduce using rule 75 (selection_statement)]
    $default  reduce using rule 75 (selection_statement)


State 153

   76 iteration_statement: WHILE '(' expression ')' statement .

    $default  reduce using rule 76 (iteration_statement)


State 154

   40 simple: ID '[' int_expreesion ']' '=' . expression

    ID      shift, and go to state 29
    STR     shift, and go to state 30
    NUM     shift, and go to state 31
    DOUBLE  shift, and go to state 32
    FALSE   shift, and go to state 33
    TRUE    shift, and go to state 34
    '-'     shift, and go to state 35
    '('     shift, and go to state 36

    constant_exp         go to state 37
    expression           go to state 157
    int_expreesion       go to state 39
    bool_expression      go to state 40
    procedure_statement  go to state 41


State 155

   78 iteration_statement: FOR '(' ID '<' '-' NUM . TO NUM ')' $@5 statement

    TO  shift, and go to state 158


State 156

   74 selection_statement: IF '(' expression ')' statement ELSE . statement

    FOR      shift, and go to state 113
    IF       shift, and go to state 114
    PRINT    shift, and go to state 115
    PRINTLN  shift, and go to state 116
    RETURN   shift, and go to state 117
    READ     shift, and go to state 118
    WHILE    shift, and go to state 119
    ID       shift, and go to state 120
    '{'      shift, and go to state 103

    statement            go to state 159
    simple               go to state 122
    compound_statement   go to state 123
    selection_statement  go to state 125
    iteration_statement  go to state 126


State 157

   40 simple: ID '[' int_expreesion ']' '=' expression .
   52 int_expreesion: expression . '+' expression
   53               | expression . '-' expression
   54               | expression . '*' expression
   55               | expression . '/' expression
   57 bool_expression: expression . '<' expression
   58                | expression . '>' expression
   59                | expression . LE_OP expression
   60                | expression . EQ_OP expression
   61                | expression . GE_OP expression
   62                | expression . NE_OP expression
   63                | expression . OR_OP expression
   64                | expression . AND_OP expression

    LE_OP   shift, and go to state 57
    GE_OP   shift, and go to state 58
    EQ_OP   shift, and go to state 59
    NE_OP   shift, and go to state 60
    AND_OP  shift, and go to state 61
    OR_OP   shift, and go to state 62
    '<'     shift, and go to state 63
    '>'     shift, and go to state 64
    '+'     shift, and go to state 65
    '-'     shift, and go to state 66
    '*'     shift, and go to state 67
    '/'     shift, and go to state 68

    $default  reduce using rule 40 (simple)


State 158

   78 iteration_statement: FOR '(' ID '<' '-' NUM TO . NUM ')' $@5 statement

    NUM  shift, and go to state 160


State 159

   74 selection_statement: IF '(' expression ')' statement ELSE statement .

    $default  reduce using rule 74 (selection_statement)


State 160

   78 iteration_statement: FOR '(' ID '<' '-' NUM TO NUM . ')' $@5 statement

    ')'  shift, and go to state 161


State 161

   78 iteration_statement: FOR '(' ID '<' '-' NUM TO NUM ')' . $@5 statement

    $default  reduce using rule 77 ($@5)

    $@5  go to state 162


State 162

   78 iteration_statement: FOR '(' ID '<' '-' NUM TO NUM ')' $@5 . statement

    FOR      shift, and go to state 113
    IF       shift, and go to state 114
    PRINT    shift, and go to state 115
    PRINTLN  shift, and go to state 116
    RETURN   shift, and go to state 117
    READ     shift, and go to state 118
    WHILE    shift, and go to state 119
    ID       shift, and go to state 120
    '{'      shift, and go to state 103

    statement            go to state 163
    simple               go to state 122
    compound_statement   go to state 123
    selection_statement  go to state 125
    iteration_statement  go to state 126


State 163

   78 iteration_statement: FOR '(' ID '<' '-' NUM TO NUM ')' $@5 statement .

    $default  reduce using rule 78 (iteration_statement)
